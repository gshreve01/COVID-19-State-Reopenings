<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0614.2338                               -->
<workbook original-version='18.1' source-build='2020.2.2 (20202.20.0614.2338)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='vlatestdatecoviddata (Covid19)' inline='true' name='federated.0ddxqxa1kqxrvc18rlswq1dczgqd' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.12kyp5g1xcbyex10a48wb1sxvwg4'>
            <connection authentication='username-password' class='postgres' dbname='Covid19' odbc-native-protocol='' one-time-sql='' port='5432' server='localhost' username='Greg' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.12kyp5g1xcbyex10a48wb1sxvwg4' name='veventrelatedcoviddata' table='[public].[veventrelatedcoviddata]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.12kyp5g1xcbyex10a48wb1sxvwg4' name='veventrelatedcoviddata' table='[public].[veventrelatedcoviddata]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>eventname</remote-name>
            <remote-type>130</remote-type>
            <local-name>[eventname]</local-name>
            <parent-name>[veventrelatedcoviddata]</parent-name>
            <remote-alias>eventname</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[veventrelatedcoviddata_D5F18BE7D7F048FE9FD5893D9A69E463]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[veventrelatedcoviddata]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>100</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[veventrelatedcoviddata_D5F18BE7D7F048FE9FD5893D9A69E463]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geocodeid</remote-name>
            <remote-type>3</remote-type>
            <local-name>[geocodeid]</local-name>
            <parent-name>[veventrelatedcoviddata]</parent-name>
            <remote-alias>geocodeid</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[veventrelatedcoviddata_D5F18BE7D7F048FE9FD5893D9A69E463]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[veventrelatedcoviddata]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[veventrelatedcoviddata_D5F18BE7D7F048FE9FD5893D9A69E463]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive</remote-name>
            <remote-type>3</remote-type>
            <local-name>[positive]</local-name>
            <parent-name>[veventrelatedcoviddata]</parent-name>
            <remote-alias>positive</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[veventrelatedcoviddata_D5F18BE7D7F048FE9FD5893D9A69E463]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>negative</remote-name>
            <remote-type>3</remote-type>
            <local-name>[negative]</local-name>
            <parent-name>[veventrelatedcoviddata]</parent-name>
            <remote-alias>negative</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[veventrelatedcoviddata_D5F18BE7D7F048FE9FD5893D9A69E463]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospitalizedcurrently</remote-name>
            <remote-type>3</remote-type>
            <local-name>[hospitalizedcurrently]</local-name>
            <parent-name>[veventrelatedcoviddata]</parent-name>
            <remote-alias>hospitalizedcurrently</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[veventrelatedcoviddata_D5F18BE7D7F048FE9FD5893D9A69E463]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospitalizedcumulative</remote-name>
            <remote-type>3</remote-type>
            <local-name>[hospitalizedcumulative]</local-name>
            <parent-name>[veventrelatedcoviddata]</parent-name>
            <remote-alias>hospitalizedcumulative</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[veventrelatedcoviddata_D5F18BE7D7F048FE9FD5893D9A69E463]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inicucurrently</remote-name>
            <remote-type>3</remote-type>
            <local-name>[inicucurrently]</local-name>
            <parent-name>[veventrelatedcoviddata]</parent-name>
            <remote-alias>inicucurrently</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[veventrelatedcoviddata_D5F18BE7D7F048FE9FD5893D9A69E463]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inicucumulative</remote-name>
            <remote-type>3</remote-type>
            <local-name>[inicucumulative]</local-name>
            <parent-name>[veventrelatedcoviddata]</parent-name>
            <remote-alias>inicucumulative</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[veventrelatedcoviddata_D5F18BE7D7F048FE9FD5893D9A69E463]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>onventilatorcurrently</remote-name>
            <remote-type>3</remote-type>
            <local-name>[onventilatorcurrently]</local-name>
            <parent-name>[veventrelatedcoviddata]</parent-name>
            <remote-alias>onventilatorcurrently</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[veventrelatedcoviddata_D5F18BE7D7F048FE9FD5893D9A69E463]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>onventilatorcumulative</remote-name>
            <remote-type>3</remote-type>
            <local-name>[onventilatorcumulative]</local-name>
            <parent-name>[veventrelatedcoviddata]</parent-name>
            <remote-alias>onventilatorcumulative</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[veventrelatedcoviddata_D5F18BE7D7F048FE9FD5893D9A69E463]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>recovered</remote-name>
            <remote-type>3</remote-type>
            <local-name>[recovered]</local-name>
            <parent-name>[veventrelatedcoviddata]</parent-name>
            <remote-alias>recovered</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[veventrelatedcoviddata_D5F18BE7D7F048FE9FD5893D9A69E463]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>death</remote-name>
            <remote-type>3</remote-type>
            <local-name>[death]</local-name>
            <parent-name>[veventrelatedcoviddata]</parent-name>
            <remote-alias>death</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[veventrelatedcoviddata_D5F18BE7D7F048FE9FD5893D9A69E463]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deathconfirmed</remote-name>
            <remote-type>3</remote-type>
            <local-name>[deathconfirmed]</local-name>
            <parent-name>[veventrelatedcoviddata]</parent-name>
            <remote-alias>deathconfirmed</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[veventrelatedcoviddata_D5F18BE7D7F048FE9FD5893D9A69E463]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deathprobable</remote-name>
            <remote-type>3</remote-type>
            <local-name>[deathprobable]</local-name>
            <parent-name>[veventrelatedcoviddata]</parent-name>
            <remote-alias>deathprobable</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[veventrelatedcoviddata_D5F18BE7D7F048FE9FD5893D9A69E463]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positiveincrease</remote-name>
            <remote-type>3</remote-type>
            <local-name>[positiveincrease]</local-name>
            <parent-name>[veventrelatedcoviddata]</parent-name>
            <remote-alias>positiveincrease</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[veventrelatedcoviddata_D5F18BE7D7F048FE9FD5893D9A69E463]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>negativeincrease</remote-name>
            <remote-type>3</remote-type>
            <local-name>[negativeincrease]</local-name>
            <parent-name>[veventrelatedcoviddata]</parent-name>
            <remote-alias>negativeincrease</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[veventrelatedcoviddata_D5F18BE7D7F048FE9FD5893D9A69E463]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>totaltests</remote-name>
            <remote-type>3</remote-type>
            <local-name>[totaltests]</local-name>
            <parent-name>[veventrelatedcoviddata]</parent-name>
            <remote-alias>totaltests</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[veventrelatedcoviddata_D5F18BE7D7F048FE9FD5893D9A69E463]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>newtests</remote-name>
            <remote-type>3</remote-type>
            <local-name>[newtests]</local-name>
            <parent-name>[veventrelatedcoviddata]</parent-name>
            <remote-alias>newtests</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[veventrelatedcoviddata_D5F18BE7D7F048FE9FD5893D9A69E463]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>newdeaths</remote-name>
            <remote-type>3</remote-type>
            <local-name>[newdeaths]</local-name>
            <parent-name>[veventrelatedcoviddata]</parent-name>
            <remote-alias>newdeaths</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[veventrelatedcoviddata_D5F18BE7D7F048FE9FD5893D9A69E463]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>newhospitalizations</remote-name>
            <remote-type>3</remote-type>
            <local-name>[newhospitalizations]</local-name>
            <parent-name>[veventrelatedcoviddata]</parent-name>
            <remote-alias>newhospitalizations</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[veventrelatedcoviddata_D5F18BE7D7F048FE9FD5893D9A69E463]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='veventrelatedcoviddata' datatype='table' name='[__tableau_internal_object_id__].[veventrelatedcoviddata_D5F18BE7D7F048FE9FD5893D9A69E463]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
      <column caption='Deathconfirmed' datatype='integer' name='[deathconfirmed]' role='measure' type='quantitative' />
      <column caption='Deathprobable' datatype='integer' name='[deathprobable]' role='measure' type='quantitative' />
      <column caption='Eventname' datatype='string' name='[eventname]' role='dimension' type='nominal' />
      <column caption='Geocodeid' datatype='integer' name='[geocodeid]' role='measure' type='quantitative' />
      <column caption='Hospitalizedcumulative' datatype='integer' name='[hospitalizedcumulative]' role='measure' type='quantitative' />
      <column caption='Hospitalizedcurrently' datatype='integer' name='[hospitalizedcurrently]' role='measure' type='quantitative' />
      <column caption='Inicucumulative' datatype='integer' name='[inicucumulative]' role='measure' type='quantitative' />
      <column caption='Inicucurrently' datatype='integer' name='[inicucurrently]' role='measure' type='quantitative' />
      <column caption='Negative' datatype='integer' name='[negative]' role='measure' type='quantitative' />
      <column caption='Negativeincrease' datatype='integer' name='[negativeincrease]' role='measure' type='quantitative' />
      <column caption='Newdeaths' datatype='integer' name='[newdeaths]' role='measure' type='quantitative' />
      <column caption='Newhospitalizations' datatype='integer' name='[newhospitalizations]' role='measure' type='quantitative' />
      <column caption='Newtests' datatype='integer' name='[newtests]' role='measure' type='quantitative' />
      <column caption='Onventilatorcumulative' datatype='integer' name='[onventilatorcumulative]' role='measure' type='quantitative' />
      <column caption='Onventilatorcurrently' datatype='integer' name='[onventilatorcurrently]' role='measure' type='quantitative' />
      <column caption='Positive' datatype='integer' name='[positive]' role='measure' type='quantitative' />
      <column caption='Positiveincrease' datatype='integer' name='[positiveincrease]' role='measure' type='quantitative' />
      <column caption='Positivitytestrate' datatype='integer' name='[positivitytestrate]' role='measure' type='quantitative' />
      <column caption='Recovered' datatype='integer' name='[recovered]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Totaltests' datatype='integer' name='[totaltests]' role='measure' type='quantitative' />
      <column-instance column='[eventname]' derivation='None' name='[none:eventname:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:eventname:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Easter&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Mother&apos;s Day&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;July 4th&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Father&apos;s Day&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='veventrelatedcoviddata' id='veventrelatedcoviddata_D5F18BE7D7F048FE9FD5893D9A69E463'>
            <properties context=''>
              <relation connection='postgres.12kyp5g1xcbyex10a48wb1sxvwg4' name='veventrelatedcoviddata' table='[public].[veventrelatedcoviddata]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Hospitilized VS On Ventilators'>
      <table>
        <view>
          <datasources>
            <datasource caption='vlatestdatecoviddata (Covid19)' name='federated.0ddxqxa1kqxrvc18rlswq1dczgqd' />
          </datasources>
          <datasource-dependencies datasource='federated.0ddxqxa1kqxrvc18rlswq1dczgqd'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Day' name='[dy:date:ok]' pivot='key' type='ordinal' />
            <column caption='Hospitalizedcurrently' datatype='integer' name='[hospitalizedcurrently]' role='measure' type='quantitative' />
            <column caption='Onventilatorcurrently' datatype='integer' name='[onventilatorcurrently]' role='measure' type='quantitative' />
            <column-instance column='[hospitalizedcurrently]' derivation='Sum' name='[sum:hospitalizedcurrently:qk]' pivot='key' type='quantitative' />
            <column-instance column='[onventilatorcurrently]' derivation='Sum' name='[sum:onventilatorcurrently:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[sum:onventilatorcurrently:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[sum:hospitalizedcurrently:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[sum:onventilatorcurrently:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[sum:hospitalizedcurrently:qk] + [federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[sum:onventilatorcurrently:qk])</rows>
        <cols>[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[dy:date:ok]</cols>
      </table>
      <simple-id uuid='{2BB551F9-FB7C-4F77-BAC8-26A47E716742}' />
    </worksheet>
    <worksheet name='Latest Death Count'>
      <table>
        <view>
          <datasources>
            <datasource caption='vlatestdatecoviddata (Covid19)' name='federated.0ddxqxa1kqxrvc18rlswq1dczgqd' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ddxqxa1kqxrvc18rlswq1dczgqd'>
            <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[death]' derivation='Sum' name='[sum:death:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[Longitude (generated)]' field-type='quantitative' max='-7383949.2868410023' min='-13992403.72352837' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[Latitude (generated)]' field-type='quantitative' max='6505214.7274036631' min='2740459.3594597122' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='2500' field='[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[sum:death:qk]' max='25024' min='17' num-steps='12' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#aaaa7f</color>
                <color>#aeae86</color>
                <color>#b2b28d</color>
                <color>#b6b695</color>
                <color>#bbbb9c</color>
                <color>#bfbfa4</color>
                <color>#c3c3ad</color>
                <color>#c7c7b5</color>
                <color>#ccccbe</color>
                <color>#d0d0c6</color>
                <color>#d4d4cf</color>
                <color>#d9d9d9</color>
                <color>#dcc8c8</color>
                <color>#dfb7b7</color>
                <color>#e3a5a5</color>
                <color>#e69292</color>
                <color>#ea7f7f</color>
                <color>#ed6c6c</color>
                <color>#f15757</color>
                <color>#f44242</color>
                <color>#f82d2d</color>
                <color>#fb1616</color>
                <color>#ff0000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[sum:death:qk]' />
              <text column='[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[sum:death:qk]' />
              <lod column='[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[none:state:nk]' />
              <lod column='[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[sum:death:qk]' />
              <geometry column='[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[Latitude (generated)]</rows>
        <cols>[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9419E8CB-D61D-43EC-80AC-6F9E768D6BC3}' />
    </worksheet>
    <worksheet name='New Hospitilizations/Positive Tests'>
      <table>
        <view>
          <datasources>
            <datasource caption='vlatestdatecoviddata (Covid19)' name='federated.0ddxqxa1kqxrvc18rlswq1dczgqd' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ddxqxa1kqxrvc18rlswq1dczgqd'>
            <column caption='Newhospitalizations' datatype='integer' name='[newhospitalizations]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[newhospitalizations]' derivation='Sum' name='[sum:newhospitalizations:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[none:state:nk]' />
              <color column='[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[sum:newhospitalizations:qk]' />
              <geometry column='[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[Latitude (generated)]</rows>
        <cols>[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F91FCE4C-B1DE-4BCF-A044-CA75F3D91DC8}' />
    </worksheet>
    <worksheet name='Positivity Rate Based On Events'>
      <table>
        <view>
          <datasources>
            <datasource caption='vlatestdatecoviddata (Covid19)' name='federated.0ddxqxa1kqxrvc18rlswq1dczgqd' />
          </datasources>
          <datasource-dependencies datasource='federated.0ddxqxa1kqxrvc18rlswq1dczgqd'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Eventname' datatype='string' name='[eventname]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[eventname]' derivation='None' name='[none:eventname:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Positive' datatype='integer' name='[positive]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[positive]' derivation='Sum' name='[sum:positive:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[none:date:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[none:eventname:nk]'>
            <groupfilter function='level-members' level='[none:eventname:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[none:eventname:nk]</column>
            <column>[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[none:eventname:nk]' />
              <lod column='[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[none:eventname:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[none:state:nk]</rows>
        <cols>([federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[tdy:date:ok] * [federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[sum:positive:qk])</cols>
      </table>
      <simple-id uuid='{FDCC3289-46BA-4D2B-BCEC-A0ABBB6FB64A}' />
    </worksheet>
    <worksheet name='Positivity Test Rate'>
      <table>
        <view>
          <datasources>
            <datasource caption='vlatestdatecoviddata (Covid19)' name='federated.0ddxqxa1kqxrvc18rlswq1dczgqd' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ddxqxa1kqxrvc18rlswq1dczgqd'>
            <column-instance column='[positivitytastratelabel]' derivation='None' name='[none:positivitytastratelabel:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[positivitytastratelabel]' role='dimension' type='nominal' />
            <column caption='Positivitytestrate' datatype='integer' name='[positivitytestrate]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[positivitytestrate]' derivation='Sum' name='[sum:positivitytestrate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[Longitude (generated)]' field-type='quantitative' max='-7069639.3023420107' min='-14338939.278020594' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[Latitude (generated)]' field-type='quantitative' max='6793578.7555399174' min='2484992.2682438563' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[sum:positivitytestrate:qk]' palette='red_green_gold_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[sum:positivitytestrate:qk]' />
              <text column='[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[none:positivitytastratelabel:nk]' />
              <lod column='[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[none:state:nk]' />
              <geometry column='[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[Latitude (generated)]</rows>
        <cols>[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F58D1C2E-D94F-496D-94C0-4399F8129A09}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Latest Death Count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[sum:death:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[none:state:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{3002D8B0-B860-4FFE-8E45-78E4618B063D}' />
    </window>
    <window class='worksheet' name='Positivity Test Rate'>
      <cards>
        <edge name='left'>
          <strip size='211'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[sum:positivitytestrate:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[max:percentageoftestingtarget:ok]</field>
            <field>[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[none:positivitytastratelabel:nk]</field>
            <field>[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[none:state:nk]</field>
            <field>[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[sum:percentageoftestingtarget:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{3F950DF8-0F2F-476B-9EF9-09FC7178E4D3}' />
    </window>
    <window class='worksheet' name='New Hospitilizations/Positive Tests'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[sum:newhospitalizations:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[:Measure Names]</field>
            <field>[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[none:density:qk]</field>
            <field>[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[none:economystateid:qk]</field>
            <field>[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[none:state:nk]</field>
            <field>[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[sum:newhospitalizations:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0C581EC0-D699-45DF-8303-F4B5D871E7B0}' />
    </window>
    <window class='worksheet' name='Hospitilized VS On Ventilators'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[none:state:nk]</field>
            <field>[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{99CDA5C1-4BC8-421A-A291-70AB7260625C}' />
    </window>
    <window class='worksheet' maximized='true' name='Positivity Rate Based On Events'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[none:eventname:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[none:eventname:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[none:date:qk]</field>
            <field>[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[none:eventname:nk]</field>
            <field>[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[none:state:nk]</field>
            <field>[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[tdy:date:qk]</field>
            <field>[federated.0ddxqxa1kqxrvc18rlswq1dczgqd].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{66A23E09-8A8F-4631-8F82-ECEECE5B0431}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Hospitilized VS On Ventilators' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Latest Death Count' width='192'>
      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
      hf8N6W0zjgadAQ0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='New Hospitilizations/Positive Tests' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Positivity Rate Based On Events' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Positivity Test Rate' width='192'>
      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
      C6t9BuNoEACw/xMsHtCaKAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
